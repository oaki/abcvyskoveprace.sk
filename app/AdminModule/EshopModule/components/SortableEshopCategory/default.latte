{snippet menu}

    {cache expire => '+20 minutes', tags => ['App\Model\Entity\Eshop\CategoryModel']}

        {var $id_name = 'sortable_category'}
        <div id="{$id_name|noescape}">
            {var parent => NULL}
            {block #menu}

                <ol n:ifset="$tree[$parent]" {if $parent==NULL}class="sortable"{/if}>
                    {foreach $tree[$parent] as $m}
                        <li id="id_category_{$m['id_category']}"
                            class="{if isset($tree[$m['id_category']])}mjs-nestedSortable-collapsed{/if}">

                            <div class="menu-btn">
                                <a style="float:left;" class="ui-state-default ui-icon ui-icon-pencil"
                                   href="{plink $editLink $m['id_category']}">Zmeniť</a>
                                <span style="float:left;"
                                      class="move ui-state-default ui-icon ui-icon-arrow-4">Presunúť</span>
                                <a style="float:left;" class="ui-state-default ui-icon ui-icon-trash confirm-ajax"
                                   href="{link delete! id=>$m['id_category']}">Zmazať</a>
                            </div>

                            <div class="link-and-btn-holder">
                                <span class="disclose"><span></span></span>
                                <a class="name{if $m['status']=='deactivate'} deactivate{/if}"
                                   href="{plink $loadNodeLink 'id_category'=>$m['id_category']}">{$m['name']}</a>
                                <div class="clear"></div>
                            </div>


                            {include #this parent => $m['id_category']}
                        </li>

                    {/foreach}
                </ol>
            {/block}
        </div>

        <script>

            $(document).ready(function() {
                $menu = $('#{$id_name|noescape}');
                var expandedClass = "mjs-nestedSortable-expanded";
                var collapsedClass = "mjs-nestedSortable-collapsed";

                var selectorExpanded = Cookies.get(expandedClass);
                if (typeof selectorExpanded !== 'undefined') {
                    selectorExpanded = JSON.parse(Cookies.get(expandedClass)).join();
                    console.log(selectorExpanded);
                    var $el = $(selectorExpanded);
                    $el.removeClass(collapsedClass);
                    $el.addClass(expandedClass);
                }

                $('ol.sortable', $menu).nestedSortable({
                    disableNesting       : 'no-nest',
                    forcePlaceholderSize : true,
                    handle               : 'span.move',
                    helper               : 'clone',
                    items                : 'li',
                    maxLevels            : 5,
                    opacity              : .6,
                    placeholder          : 'placeholder',
                    revert               : 250,
                    tabSize              : 10,
                    tolerance            : 'pointer',
                    toleranceElement     : '> div',

                    isTree         : false,
                    startCollapsed : false,

                    stop : function(event, ui) {
                        //serialized = $('ol.sortable').nestedSortable('serialize');
                        arr = $('#{$id_name|noescape} ol.sortable').nestedSortable('toArray', {startDepthCount : 0});
                        $.post( {link saveOrder!}, JSON.stringify(arr));
                    }
                });

                var saveStateToCookies = function() {
                    var ids = $.map($("." + expandedClass, $menu), function(el) {
                        return '#' + $(el).attr('id');
                    });
                    Cookies.set(expandedClass, ids);
                };

                $('.disclose').on('click', function() {
                    console.log('disclose');
                    var $el = $(this).closest('li');
                    if ($el.hasClass(collapsedClass)) {
                        $el.removeClass(collapsedClass);
                        $el.addClass(expandedClass);
                    } else {
                        $el.removeClass(expandedClass);
                        $el.addClass(collapsedClass);
                    }
                    //				$(this).closest('li').toggleClass('mjs-nestedSortable-collapsed').toggleClass('mjs-nestedSortable-expanded');
                    saveStateToCookies();
                })

            });
        </script>

    {/cache}
{/snippet}
