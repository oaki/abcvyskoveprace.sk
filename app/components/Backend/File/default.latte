<!-- Bootstrap CSS fixes for IE6 -->
<!--[if lt IE 7]>
<link rel="stylesheet" href="http://blueimp.github.com/cdn/css/bootstrap-ie6.min.css"><![endif]-->
<!-- Bootstrap Image Gallery styles -->
<link rel="stylesheet"
      href="{$basePath}/assets/backend/jscripts/jQuery-File-Upload/css/bootstrap-image-gallery.min.css">
<!-- CSS to style the file input field as button and adjust the Bootstrap progress bars -->
<link rel="stylesheet" href="{$basePath}/assets/backend/jscripts/jQuery-File-Upload/css/jquery.fileupload-ui.css">
<!-- Shim to make HTML5 elements usable in older Internet Explorer versions -->
<!--[if lt IE 9]>
<script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script><![endif]-->


<link rel="stylesheet" href="{$basePath}/assets/backend/jscripts/jQuery-File-Upload/css/style.css">

<!-- The file upload form used as target for the file upload widget -->
<form id="fileupload" action="{plink :Admin:FileNode:upload id_file_node=>$control->id_file_node}" method="POST"
      enctype="multipart/form-data">
    <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
    <div class="fileupload-buttonbar">
        <div class="span7">
            <!-- The fileinput-button span is used to style the file input field as button -->

            <span class="btn btn-success fileinput-button">
                    <i class="icon-plus icon-white"></i>
                    <span>Pridať súbory...</span>
                    <input type="file" name="files[]" multiple>
                </span>

            <button type="button" class="btn btn-danger delete">
                <i class="icon-trash icon-white"></i>
                <span>Zmazať</span>
            </button>

            <input type="checkbox" class="toggle">
        </div>
        <!-- The global progress information -->
        <div class="span5 fileupload-progress fade">
            <!-- The global progress bar -->
            <div class="progress progress-success progress-striped active" role="progressbar" aria-valuemin="0"
                 aria-valuemax="100">
                <div class="bar" style="width:0%;"></div>
            </div>
            <!-- The extended global progress information -->
            <div class="progress-extended">&nbsp;</div>
        </div>
    </div>
    <!-- The loading indicator is shown during file processing -->
    <div class="fileupload-loading"></div>

    <!-- The table listing the files available for upload/download -->
    <div role="presentation">
        <ul class="files {$control->template_name}" data-toggle="modal-gallery" data-target="#modal-gallery"></ul>

        <div style="clear:both;"></div>
    </div>
</form>


<!-- modal-gallery is the modal dialog used for the image gallery -->
<div id="modal-gallery" class="modal modal-gallery hide fade">
    <div class="modal-header">
        <a class="close" data-dismiss="modal">&times;</a>
        <h3 class="modal-title"></h3>
    </div>
    <div class="modal-body">
        <div class="modal-image"></div>
    </div>
    <div class="modal-footer">
        <a class="btn modal-download" target="_blank">
            <i class="icon-download"></i>
            <span>Stiahnuť</span>
        </a>
        <a class="btn btn-success modal-play modal-slideshow" data-slideshow="5000">
            <i class="icon-play icon-white"></i>
            <span>Slideshow</span>
        </a>
        <a class="btn btn-info modal-prev">
            <i class="icon-arrow-left icon-white"></i>
            <span>Pred.</span>
        </a>
        <a class="btn btn-primary modal-next">
            <span>Nasl.</span>
            <i class="icon-arrow-right icon-white"></i>
        </a>
    </div>
</div>
<!-- The template to display files available for upload -->
<script id="template-upload" type="text/x-tmpl" n:syntax="off">
{% for (var i=0, file; file=o.files[i]; i++) { %}
    <li class="well template-upload fade">
        <div class="preview"><span class="fade"></span></div>

        <div class="size"><span>{%=o.formatFileSize(file.size)%}</span></div>
        {% if (file.error) { %}
            <div class="error" colspan="2"><span class="label label-important">{%=locale.fileupload.error%}
    </span> {%=locale.fileupload.errors[file.error] || file.error%}</div>
        {% } else if (o.files.valid && !i) { %}
            <div>
                <div class="progress progress-success progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="bar" style="width:0%;"></div></div>
            </div>
            <div class="start">{% if (!o.options.autoUpload) { %}
                <button class="btn btn-primary">
                    <i class="icon-upload icon-white"></i>
                    <span>{%=locale.fileupload.start%}</span>
                </button>
            {% } %}</div>
        {% } else { %}

        {% } %}
        <div class="cancel">{% if (!i) { %}
            <button class="btn btn-warning">
                <i class="icon-ban-circle icon-white"></i>
                <span>{%=locale.fileupload.cancel%}</span>
            </button>
        {% } %}</div>
    </li>
{% } %}

</script>
<!-- The template to display files available for download -->
<script id="template-download" type="text/x-tmpl" n:syntax="off">
{% for (var i=0, file; file=o.files[i]; i++) { %}
    <li class="template-download well" id="id_file-{%=file.id_file%}">
        {% if (file.error) { %}

            <div class="name"><span>{%=file.name%}</span></div>
            <div class="size"><span>{%=o.formatFileSize(file.size)%}</span></div>
            <div class="error"><span class="label label-important">{%=locale.fileupload.error%}
    </span> {%=locale.fileupload.errors[file.error] || file.error%}</div>
        {% } else { %}
            <div class="preview">{% if (file.thumbnail_url) { %}
                <a data-gallery="gallery" href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}"><img src="{%=file.thumbnail_url%}"></a>
            {% } %}
			</div>

			<div class="inputs">

				{% for (var j=0; input=file.default_file_param[j]; j++) { %}
					<input class="{%=input.css_class%}" type="{%=input.type%}" name="{%=input.name%}_{%=file.id_file%}" value="{%=(file.params[input.name]!=undefined)?file.params[input.name]:''%}" placeholder="{%=input.placeholder%}" title="{%=input.placeholder%}"/>
				{% } %}
			</div>

			<div class="buttons">
				<div class="delete">
					<input type="checkbox" name="delete" value="1">
					<button class="btn btn-danger" data-type="{%=file.delete_type%}" data-url="{%=file.delete_url%}">
						<i class="icon-trash icon-white"></i>
					</button>
				</div>
			</div>

        {% } %}

    </li>
{% } %}

</script>

<!-- The jQuery UI widget factory, can be omitted if jQuery UI is already included -->
<script src="{$basePath}/assets/backend/jscripts/jQuery-File-Upload/js/vendor/jquery.ui.widget.js"></script>
<!-- The Templates plugin is included to render the upload/download listings -->
<script src="{$basePath}/assets/backend/jscripts/jQuery-File-Upload/js/vendor/tmpl.min.js"></script>
<!-- The Load Image plugin is included for the preview images and image resizing functionality -->
<script src="{$basePath}/assets/backend/jscripts/jQuery-File-Upload/js/vendor/load-image.min.js"></script>
<!-- The Canvas to Blob plugin is included for image resizing functionality -->
<script src="{$basePath}/assets/backend/jscripts/jQuery-File-Upload/js/vendor/canvas-to-blob.min.js"></script>
<!-- Bootstrap JS and Bootstrap Image Gallery are not required, but included for the demo -->

<script src="{$basePath}/assets/backend/jscripts/jQuery-File-Upload/js/vendor/bootstrap-image-gallery.min.js"></script>
<!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
<script src="{$basePath}/assets/backend/jscripts/jQuery-File-Upload/js/jquery.iframe-transport.js"></script>
<!-- The basic File Upload plugin -->
<script src="{$basePath}/assets/backend/jscripts/jQuery-File-Upload/js/jquery.fileupload.js"></script>
<!-- The File Upload file processing plugin -->
<script src="{$basePath}/assets/backend/jscripts/jQuery-File-Upload/js/jquery.fileupload-fp.js"></script>
<!-- The File Upload user interface plugin -->
<script src="{$basePath}/assets/backend/jscripts/jQuery-File-Upload/js/jquery.fileupload-ui.js"></script>
<!-- The localization script -->
<script src="{$basePath}/assets/backend/jscripts/jQuery-File-Upload/js/locale.js"></script>
<!-- The main application script -->

<!-- The XDomainRequest Transport is included for cross-domain file deletion for IE8+ -->
<!--[if gte IE 8]>
<script src="{$basePath}/assets/backend/jscripts/jQuery-File-Upload/js/cors/jquery.xdr-transport.js"></script><![endif]-->

<script>

    $(function() {
        'use strict';

        // Initialize the jQuery File Upload widget:
        $('#fileupload').fileupload();

        // Enable iframe cross-domain access via redirect option:
        $('#fileupload').fileupload(
            'option',
            'redirect',
            window.location.href.replace(
                /\/[^\/]*$/,
                '/jscripts/jQuery-File-Upload/cors/result.html?%s'
            )
        );

        // Demo settings:
        $('#fileupload').fileupload('option', {
            url              : {plink :Admin:FileNode:upload id_file_node=>$control->id_file_node},
            maxFileSize      : 5000000,
            'autoUpload'     : true,
            previewMaxWidth  : 150,
            previewMaxHeight : 150,
            //		sequentialUploads: true,
            process          : [
                {
                    action      : 'load',
                    maxFileSize : 20000000 // 20MB
                },
                {
                    action    : 'resize',
                    maxWidth  : 1200,
                    maxHeight : 1200
                },
                {
                    action : 'save'
                }
            ]
        });

        $('#fileupload').each(function() {
            var that = this;
            $.getJSON( {plink :Admin:FileNode:getFiles 'id_file_node'=>$control->id_file_node}, function(result) {
                if (result && result.length) {
                    $(that).fileupload('option', 'done')
                        .call(that, null, {
                            result : result
                        });
                }
            });
        });

        $('ul.files').sortable({
            handle : '.preview',
            stop   : function(event, ui) {
                var arraied = $('ul.files').sortable('toArray');
                $.post( {plink :Admin:FileNode:saveOrder}, {
                    'order' : arraied
                });
            }

        });

        //
        //	$(".template-download").live('mouseover', function(){
        //		$(this).children('.btn').show();
        //	});
        //
        //	$(".template-download").live('mouseout', function(){
        //		$(this).children('.btn').hide();
        //	});

        $('.inputs input').live('blur', function(e) {
            //get all input in actual input
            var container = $(this).parent();

            var all_input = container.children('input');

            var my_post = {};

            var id_file = false;

            all_input.each(function(index) {
                var name = $(this).attr('name');
                var tmp = name.split('_');
                name = tmp[0];
                id_file = tmp[1];

                my_post[name] = $(this).val();
            });

            var post_values = {'params' : my_post, 'id_file' : id_file};

            $.post( {plink :Admin:FileNode:save}, post_values);
        })

    });
</script>

<script src="{$basePath}/assets/backend/jscripts/jquery/jquery.getimagedata.min.js"></script>
<script>
    $(document).bind('drop', function(e) {
        var url = $(e.originalEvent.dataTransfer.getData('text/html')).filter('img').attr('src');
        if (url) {
            $.getImageData({
                url     : url,
                success : function(img) {
                    var canvas = document.createElement('canvas');
                    if (canvas.getContext && canvas.toBlob) {
                        canvas.getContext('2d').drawImage(img, 0, 0);
                        canvas.toBlob(function(blob) {
                            $('#fileupload').fileupload('add', {'files' : [blob]});
                        });
                    }
                }
            });
        }
    });


</script>
